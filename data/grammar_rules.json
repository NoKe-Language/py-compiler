{
    "MODULE" : "(?:[ \\t]+)?(?:(?P<DISABLED>disabled)(?&SKIP))?(?P<MODULE_TYPE>\\b(?:fun|class|module)\\b)(?&SKIP)(?:(?P<RETURN_TYPE_A>\\b(?:[a-zA-Z_]\\w*)\\b)(?&SKIP))?(?P<MODULE_ID>(?&IDENTIFIER))(?&SKIP)?(?:(?:\\((?P<PARAMETERS>[^\\(\\)]+)?\\))(?&SKIP)?)?(?::(?&SKIP)?(?P<RETURN_TYPE_B>\\b(?:[a-zA-Z_]\\w*)\\b)(?&SKIP)?)?(?&COMMENT)?(?&SKIP)?(?:{(?P<BODY>(?:(?:(?&STRING_LITERAL)|[^{}]|(?:{(?&BODY)}))+)?)})",
    "DISABLE" : "disable(?&SKIP)?(?&COMMENT)?(?&SKIP)?{(?&BODY)}",
    "COMMENT" : "#(?:[^\\n]+)?",
    "WHILE_LOOP" : "while(?&SKIP)?\\((?P<WHILE_CONDITION>(?&IF_CONDITION))\\)(?&SKIP)?(?&COMMENT)?(?&SKIP)?{?(?P<WHILE_BODY>(?&IF_BODY))}?",
    "DO_LOOP" : "do(?&SKIP)?(?&COMMENT)?(?&SKIP)?{?(?P<DO_BODY>(?&IF_BODY))}?(?&SKIP)?while(?&SKIP)?\\((?P<DO_CONDITION>(?&IF_CONDITION))\\)(?&SKIP)?[;\\n]",
    "FOR_LOOP" : "for(?&SKIP)?\\((?P<FOR_ARGUMENTS>(?:(?&IF_CONDITION)|;)+)\\)(?&SKIP)?(?&COMMENT)?(?&SKIP)?{?(?P<FOR_BODY>(?&IF_BODY))}?",
    "BRANCH" : "if(?&SKIP)?\\((?P<IF_CONDITION>(?:(?&STRING_LITERAL)|(?&CHAR_LITERAL)|(?:\\((?&IF_CONDITION)?\\))|[^;\\n()])+)\\)(?&SKIP)?(?&COMMENT)?(?&SKIP)?(?:{?(?P<IF_BODY>(?:(?&BRANCH)|(?&WHILE_LOOP)|(?&DO_LOOP)|(?&FOR_LOOP)|(?<={)(?&BODY)(?=}))|(?<!{)[^;{}]+[;](?!}))}?)(?:(?&SKIP)?(?&COMMENT)?(?&SKIP)?else(?&SKIP)?(?&COMMENT)?(?&SKIP)?{?(?P<ELSE_BODY>(?&IF_BODY))}?)?",
    "CALL" : "(?P<CALL_ID>(?&IDENTIFIER)(?:\\.(?&IDENTIFIER))*)(?&SKIP)?\\((?P<CALL_ARGUMENTS>(?:(?&STRING_LITERAL)|'[()]'|[^()]|(?&CALL))+)?\\)",
    "RETURN" : "return(?&SKIP)(?P<RETURN_VALUE>[^;\\n]+)",
    "ASSIGNEMENT" : "(?:(?P<ASSIGN_TYPE>(?&IDENTIFIER))(?&SKIP))?(?P<ASSIGN_VAR_ID>(?&CALL_ID))(?&SKIP)?=(?!=)(?&SKIP)?(?P<ASSIGN_VALUE>(?:(?&STRING_LITERAL)|[^;\\n])+)",
    "DECLARATION" : "(?P<DECL_TYPE_A>(?&IDENTIFIER))(?&SKIP)(?P<DECL_ID>(?&IDENTIFIER))(?:(?&SKIP)?:(?&SKIP)?(?P<DECL_TYPE_B>(?&IDENTIFIER)))?(?&SEPARATOR)",
    "PATH" : "(?P<PATH_LEFT_ID>(?&IDENTIFIER)(?:\\.(?&IDENTIFIER))*)\\.(?P<PATH_RIGHT_ID>(?&IDENTIFIER))",
    "LOGIC_GATE" : "(?P<LOG_LEFT_TERM>(?:(?:(?&STRING_LITERAL)|\\((?:(?&LOGIC_GATE)|(?&COMPARISON)|(?&LOGIC_NOT)|(?&LOG_LEFT_TERM))?\\)|[^;\\n()\"])(?<!(?<![<>=!])=(?!=)))+)(?P<COMP_SEPARATOR>and|or|xor)(?P<LOG_RIGHT_TERM>(?&LOG_LEFT_TERM))",
    "LOGIC_NOT" : "not(?&SKIP)?(?P<NOT_TERM>(?:(?&STRING_LITERAL)|\\((?:(?&LOGIC_GATE)|(?&COMPARISON)|(?&LOGIC_NOT)|(?&NOT_TERM))?\\)|[^;\\n()\"])+)",
    "COMPARISON" : "(?P<COMP_LEFT_TERM>(?:(?&STRING_LITERAL)|\\((?:(?&LOGIC_GATE)|(?&COMPARISON)|(?&LOGIC_NOT)|(?&COMP_LEFT_TERM))\\)|[^;\\n()\"=])+)(?P<COMPARATOR><|>|<=|>=|==|!=)(?P<RIGHT_TERM>(?&COMP_LEFT_TERM))",
    "ADDITION" : "(?P<ADD_LEFT_TERM>(?:(?&STRING_LITERAL)|\\((?&ADD_LEFT_TERM)\\)|[^\\n;()\"=])+)(?P<ADD_OPERATOR>[+\\-])(?P<ADD_RIGHT_TERM>(?&ADD_LEFT_TERM))",
    "MULTIPLICATION" : "(?P<MU_LEFT_TERM>(?:(?&STRING_LITERAL)|\\((?&MU_LEFT_TERM)\\)|[^\\n;()\"=])+)(?P<MU_OPERATOR>[\\\/*%])(?P<MU_RIGHT_TERM>(?&MU_LEFT_TERM))",
    "IDENTIFIER": "(?!not|yep|true|nope|false|and|or|xor|fun|module|class|if|else|disable|disabled|for|while|do)\\b[a-zA-Z_]\\w*\\b",
    "STRING_LITERAL": "\\\"(?:[^\\\"]?|\\\\\\\")+[^\\\\]\\\"|\\\"\\\"",
    "CHAR_LITERAL": "''(?:[^'\\\\]|\\\\'|\\\\\\\\|\\\\n|\\\\t)'",
    "INT_DEC_LITERAL": "[0-9]+\\b",
    "INT_HEX_LITERAL": "\\b0[xX][0-9a-fA-F]+\\b",
    "INT_BIN_LITERAL": "\\b0[bB][01]+\\b",
    "BOOL_LITERAL": "\\b(?:yep|nope|true|false)\\b",
    "FLOAT_LITERAL": "[0-9.]+f\\b",
    "OPERATOR": "[+\\-*\\/@%]",
    "SEPARATOR": "[;\\n](?:\\n+)?|\\z",
    "PARAM_SEPARATOR" : ",",
    "BRACKET": "[()\\[\\]{}]",
    "SKIP": "\\s+",
    "MISMATCH": ".+"
}